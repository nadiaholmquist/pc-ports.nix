diff --git a/lib/rt64/src/tools/texture_hasher/texture_hasher.cpp b/lib/rt64/src/tools/texture_hasher/texture_hasher.cpp
index 0a51b99..8c101a7 100644
--- a/lib/rt64/src/tools/texture_hasher/texture_hasher.cpp
+++ b/lib/rt64/src/tools/texture_hasher/texture_hasher.cpp
@@ -4,6 +4,7 @@
 
 #include <filesystem>
 #include <fstream>
+#include <list>
 
 #include "../../contrib/xxHash/xxh3.h"
 #include "../../common/rt64_load_types.cpp"
@@ -345,7 +346,7 @@ void addRiceHash(const std::filesystem::path &directory, const std::string &hash
     // Rice expects to hash at least this many bytes, even if it leaks into other parts of RAM.
     uint32_t expectedSize = (height - 1) * bpl + (width << drawTile.siz >> 1);
     if (expectedSize > rdramBytes.size()) {
-        fprintf(stderr, "Unable to hash %s. Expected %d bytes but got %llu bytes (%dX%d).\n", hashNameWithSuffix.c_str(), expectedSize, rdramBytes.size(), width, height);
+        fprintf(stderr, "Unable to hash %s. Expected %u bytes but got %lu bytes (%dX%d).\n", hashNameWithSuffix.c_str(), expectedSize, rdramBytes.size(), width, height);
         return;
     }
 
@@ -615,4 +616,4 @@ int main(int argc, char *argv[]) {
     }
     
     return 0;
-}
\ No newline at end of file
+}
diff --git a/lib/rt64/src/tools/texture_packer/texture_packer.cpp b/lib/rt64/src/tools/texture_packer/texture_packer.cpp
index a8e13c9..a498434 100644
--- a/lib/rt64/src/tools/texture_packer/texture_packer.cpp
+++ b/lib/rt64/src/tools/texture_packer/texture_packer.cpp
@@ -7,6 +7,10 @@
 #include <mutex>
 #include <queue>
 #include <set>
+#include <thread>
+#include <condition_variable>
+#include <atomic>
+#include <list>
 
 #include <ddspp/ddspp.h>
 #include <miniz/miniz.h>
@@ -594,4 +598,4 @@ int main(int argc, char *argv[]) {
     }
 
     return 0;
-}
\ No newline at end of file
+}
